{
	"info": {
		"_postman_id": "8e746be8-1e33-4ed1-9d23-20da68b9a187",
		"name": "API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "delete a user record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Status code name has string No Content\", function () {\r",
							"    pm.response.to.have.status(\"No Content\");\r",
							"    });\r",
							"    pm.test(\"Body matches string\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}api/users/2",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "update a user record",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    });\r",
							"    pm.test(\"Body matches string\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{url}}api/users/2",
					"host": [
						"{{url}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "create new record in database",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Created\");\r",
							"    });\r",
							" pm.test(\"Body matches string\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}api/user",
					"host": [
						"{{url}}api"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "get single todo entry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    });\r",
							"    pm.test(\"Body matches string\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"totalResults\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url1}}todo/?todo_id=2",
					"host": [
						"{{url1}}todo"
					],
					"path": [
						""
					],
					"query": [
						{
							"key": "todo_id",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get all todo entries",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"    });\r",
							"    pm.test(\"Body matches string\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"Task 1\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url1}}todo",
					"host": [
						"{{url1}}todo"
					]
				}
			},
			"response": []
		}
	]
}